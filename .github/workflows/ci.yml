name: CI

on:
  - push
  - pull_request

env:
  CARGO_TERM_COLOR: always

jobs:
  Check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  Check-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Create dummy `dist` directory
        run: |
          cd pet-monitor-app
          mkdir dist
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Run cargo check in release mode
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release

  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  Lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check
      - name: Run lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  build-client:
    name: Build client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.8.0
      - name: Build bundle
        run: |
          cd client
          pnpm install
          pnpm build

  lint-client:
    name: Lint client
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7.8.0
      - name: Build bundle
        run: |
          cd client
          pnpm install
          pnpm lint
