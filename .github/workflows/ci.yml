name: CI

on:
  - push
  - pull_request
  - workflow_dispatch

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  build-flake:
    name: Build Nix flake
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: stonks3141
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Run build
        run: nix build
  
  Check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: extractions/setup-just@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run checks
        run: just check

  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: extractions/setup-just@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Build tests
        run: just test --no-run
      - name: Run tests
        run: just test

  udeps:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install cargo-udeps
        run: cargo +nightly install cargo-udeps
      - name: Find unused dependencies
        run: cargo +nightly udeps --all-targets
        
  check-semver:
    name: Check semver
    runs-on: ubuntu-latest

    strategy:
      matrix:
        crate:
          - pet-monitor-app
          - mp4-stream
          - bmff

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      # Waiting on obi1kenobi/cargo-semver-checks#356
      # - name: 'Check semver for ${{ matrix.crate }}'
      #   uses: obi1kenobi/cargo-semver-checks-action@v1
      #   with:
      #     crate-name: ${{ matrix.crate }}
      #     version-tag-prefix: '${{ matrix.crate }}-v'

  Publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: crates.io
    needs:
      - Check
      - Test
      - udeps
      - check-semver

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install cargo-workspaces
        run: cargo install cargo-workspaces
      - name: Publish crates
        run: cargo ws publish --yes --from-git --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
