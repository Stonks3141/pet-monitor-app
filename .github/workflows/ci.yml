name: CI

on:
  - push
  - pull_request
  - workflow_dispatch

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  build-flake:
    name: Build Nix flake
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@7ac1ec25491415c381d9b62f0657c7a028df52a7 # v24
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: stonks3141
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Run build
        run: nix build
  
  Check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: extractions/setup-just@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Run checks
        run: just check

  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: extractions/setup-just@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Build tests
        run: just test --no-run
      - name: Run tests
        run: just test

  Publish:
    needs:
      - Check
      - Test

    strategy:
      matrix:
        crate:
          - pet-monitor-app
          - mp4-stream
          - bmff

    uses: ./.github/workflows/publish.yml
    with:
      crate: ${{ matrix.crate }}
