name: Publish crate

on:
  workflow_call:
    inputs:
      crate:
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  check-published-version:
    name: Check published version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: 'Check if crate ${{ inputs.crate }} is published'
        run: |
          set -euxo pipefail
          crate=${{ inputs.crate }}
          prefix="https://raw.githubusercontent.com/rust-lang/crates.io-index/master"
          url="$prefix/$(echo "$crate" | head -c2)/$(echo "$crate" | head -c4 | tail -c2)/$crate"
          published=$(curl 2>/dev/null "$url" | sort | tail -1 | gojq -r '.vers')
          manifest=$(awk -F \" '/version = / { print $2 }' < crates/$crate/Cargo.toml)

          if [ "$manifest" = "$published" ]; then
            echo 'new_version=no' >> $GITHUB_OUTPUT
          else
            echo 'new_version=yes' >> $GITHUB_OUTPUT
          fi

  check-semver:
    name: Check semver
    runs-on: ubuntu-latest
    needs:
      - check-published-version
    if: needs.check-published-version.outputs.new_version == 'yes'

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: 'Check semver for crate ${{ inputs.crate }}'
        uses: obi1kenobi/cargo-semver-checks-action@v1
        with:
          crate-name: ${{ inputs.crate }}
          version-tag-prefix: '${{ inputs.crate }}-v'

  Publish:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: crates.io
    needs:
      - check-semver

    steps:
      - uses: actions/checkout@v3
      - name: Install x264
        run: sudo apt-get install libx264-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Publish crates
        run: cargo publish -p ${{ inputs.crate }} --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
